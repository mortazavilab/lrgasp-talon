import pdb
import pandas as pd
from src.utils.io import read_data_matrix

configfile: "configs/config.yaml"

tools = ['talon']


def _get_row(encode_id):
    df = read_data_matrix(config['encode']['data_matrix'])
    return df.loc[encode_id]


def fasta(wildcards):
    wildcards = dict(wildcards)
    if 'specie' in wildcards:
        return config['lrgasp']['reference'][wildcards['specie']]['fasta']
    elif 'encode_id' in wildcards:
        row = _get_row(wildcards['encode_id'])
        return config['lrgasp']['reference'][row['species']]['fasta']
    else:
        raise ValueError('fasta cannot be determined from wildcards.')


def gtf(wildcards):
    wildcards = dict(wildcards)
    if 'specie' in wildcards:
        return config['lrgasp']['reference'][wildcards['specie']]['gtf']
    elif 'encode_id' in wildcards:
        row = _get_row(wildcards['encode_id'])
        return config['lrgasp']['reference'][row['species']]['gtf']
    else:
        raise ValueError('gtf cannot be determined from wildcards.')


def chrom_sizes(wildcards):
    wildcards = dict(wildcards)
    chrom_sizes = config['lrgasp']['chrom_sizes']
    if 'specie' in wildcards:
        return chrom_sizes.format(specie=wildcards['specie'])
    elif 'encode_id' in wildcards:
        row = _get_row(wildcards['encode_id'])
        return chrom_sizes.format(specie=row['species'])
    else:
        raise ValueError('gtf cannot be determined from wildcards.')


# def fastq_files(wildcards):
#     df = read_data_matrix(config['encode']['data_matrix'], wildcards)
#     return [
#         f'{config["encode"]["fastq_dir"]}/{row["species"]}_{row["sample"]}_{row["library_prep"]}_{row["platform"]}_{row["replicate"]}_{row["file_acc"]}.fastq'
#         for i, row in df.iterrows()
#     ]


# def fastq_paired(wildcards):
#     df = read_data_matrix(config['encode']['data_matrix'], wildcards)
#     return [
#         f'{config["encode"]["fastq_dir"]}/{row["species"]}_{row["sample"]}_{row["library_prep"]}_{row["platform"]}_{row["replicate"]}_{row["paired_acc"]}.fastq'
#         for i, row in df.iterrows()
#     ]


# def expand_encode(path, wildcards):
#     df = read_data_matrix(config['encode']['data_matrix'], wildcards)
#     return [
#         path.format(specie=row['species'], sample=row['sample'],
#                     library_prep=row['library_prep'], platform=row['platform'],
#                     rep=row['replicate'], acc=row['file_acc'])
#         for i, row in df.iterrows()
#     ]

df = read_data_matrix(config['encode']['data_matrix'])
df_r2c2 = df[
    (df['file_contents'] == 'reads') &
    (df['library_prep'] == 'R2C2')
].reset_index().groupby(['species', 'sample', 'replicate'])[['file_acc']] \
    .agg(list).reset_index(['replicate', 'species'], drop=True)


include: "./rules/download.smk"
include: "./rules/align.smk"
# include: "./rules/stringtie.smk"
include: "./rules/transcriptclean.smk"
include: "./rules/talon.smk"
include: "./rules/lapa.smk"
include: "./rules/benchmark.smk"


pb_library_prep = ['cDNA', 'CapTrap']
ont_library_prep = ['cDNA', 'dRNA', 'CapTrap', 'R2C2']


rule all:
    input:
        expand(
            [
                config['benchmark_task1']['result_dir'],

                # config['submission']['task1']['gtf'],
                # config['submission']['task1']['read_map'],
                # config['submission']['task1']['experiment'],
                # config['submission']['task2']['expression'],
                # config['submission']['task2']['experiment'],
                # config['benchmark_task2']['result_dir'],
            ],
            tool=['talon'],  # 'talon_lapa'
            specie=['human'],
            sample=['humansimulation'],
            library_prep=['cDNA'],
            platform=['PacBio'],
            method=['long', 'short']
        ),
        expand(
            [
                config['benchmark_task1']['result_dir'],
                config['submission']['task1']['gtf'],
                config['submission']['task1']['read_map'],
                config['submission']['task1']['experiment'],
                config['submission']['task2']['expression'],
                config['submission']['task2']['experiment'],
                config['benchmark_task2']['result_dir'],
            ],
            tool=['talon'],  # 'talon_lapa'
            specie=['mouse'],
            sample=['mousesimulation'],
            library_prep=['cDNA'],
            platform=['PacBio'],
            method=['long', 'short']
        ),

        # expand(
        #     [
        #         config['submission']['task1']['entry'],
        #         config['submission']['task2']['entry']
        #     ],
        #     tool='talon_lapa',
        #     method=['short', 'long']
        # ),
        # expand(
        #     [
        #         config['submission']['task1']['gtf'],
        #         config['submission']['task1']['read_map'],
        #         config['submission']['task1']['experiment'],
        #         config['submission']['task2']['expression'],
        #         config['submission']['task2']['experiment'],
        #         config['benchmark_task1']['result_dir'],
        #         config['benchmark_task2']['result_dir'],
        #     ],
        #     tool=['talon', 'talon_lapa'],
        #     specie=['human'],
        #     sample=['WTC11', 'H1mix'],
        #     library_prep=pb_library_prep,
        #     platform=['PacBio'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     [
        #         config['submission']['task1']['gtf'],
        #         config['submission']['task1']['read_map'],
        #         config['submission']['task1']['experiment'],
        #         config['submission']['task2']['expression'],
        #         config['submission']['task2']['experiment'],
        #         config['benchmark_task1']['result_dir'],
        #         config['benchmark_task2']['result_dir'],
        #     ],
        #     tool=['talon', 'talon_lapa'],
        #     specie=['human'],
        #     sample=['WTC11', 'H1mix'],
        #     library_prep=ont_library_prep,
        #     platform=['ONT'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     [
        #         config['submission']['task1']['gtf'],
        #         config['submission']['task1']['read_map'],
        #         config['submission']['task1']['experiment'],
        #         config['submission']['task2']['expression'],
        #         config['submission']['task2']['experiment'],
        #         config['benchmark_task1']['result_dir'],
        #         config['benchmark_task2']['result_dir'],
        #     ],
        #     tool=['talon', 'talon_lapa'],
        #     specie=['mouse'],
        #     sample=['ES'],
        #     library_prep=pb_library_prep,
        #     platform=['PacBio'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     [
        #         config['submission']['task1']['gtf'],
        #         config['submission']['task1']['read_map'],
        #         config['submission']['task1']['experiment'],
        #         config['submission']['task2']['expression'],
        #         config['submission']['task2']['experiment'],
        #         config['benchmark_task1']['result_dir'],
        #         config['benchmark_task2']['result_dir'],
        #     ],
        #     tool=['talon', 'talon_lapa'],
        #     specie=['mouse'],
        #     sample=['ES'],
        #     library_prep=ont_library_prep,
        #     platform=['ONT'],
        #     method=['long', 'short']
        # )

        # expand(
        #     [config['submission']['task1']['gtf'],
        #         config['submission']['task1']['read_map']],
        #     tool=['talon', 'talon_lapa'],
        #     specie=['human'],
        #     sample=['WTC11', 'H1mix'],
        #     library_prep=pb_library_prep,
        #     platform=['PacBio'],
        #     method=['long', 'short']
        # ),

        # expand(
        #     ,
        #     tool=['talon'],
        #     specie=['human'],
        #     sample=['WTC11', 'H1mix'],
        #     library_prep=pb_library_prep,
        #     platform=['PacBio'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     ,
        #     tool=['talon'],
        #     specie=['human'],
        #     sample=['WTC11', 'H1mix'],
        #     library_prep=ont_library_prep,
        #     platform=['ONT'],
        #     method=['long', 'short']
        # ),
        # # mouse
        # expand(
        #     rules.benchmark_task1.output,
        #     tool=['talon', 'talon_lapa'],
        #     specie=['mouse'],
        #     sample=['ES'],
        #     library_prep=ont_library_prep,
        #     platform=['ONT'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     rules.benchmark_task1.output,
        #     tool=['talon', 'talon_lapa'],
        #     specie=['mouse'],
        #     sample=['ES'],
        #     library_prep=pb_library_prep,
        #     platform=['PacBio'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     rules.benchmark_task2.output,
        #     tool=['talon'],
        #     specie=['mouse'],
        #     sample=['ES'],
        #     library_prep=pb_library_prep,
        #     platform=['PacBio'],
        #     method=['long', 'short']
        # ),
        # expand(
        #     rules.benchmark_task2.output,
        #     tool=['talon'],
        #     specie=['mouse'],
        #     sample=['ES'],
        #     library_prep=ont_library_prep,
        #     platform=['ONT'],
        #     method=['long', 'short']
        # ),
